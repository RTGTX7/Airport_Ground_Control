#ifndef TAKEOFF_CONTROL_HPP
#define TAKEOFF_CONTROL_HPP

#include <cadmium/modeling/coupled_model.hpp>
#include <cadmium/modeling/ports.hpp>
#include "Takeoff_Queue.hpp"  // Atomic model for managing the FIFO takeoff queue
#include "FlightInfo.hpp"     // Struct defining flight data (ID, type, etc.)

// The Takeoff_Control coupled model
struct Takeoff_Control {
    // Define input and output ports for the Takeoff_Control coupled model
    struct in_takeoff_request : public cadmium::in_port<FlightInfo> {};
    struct out_takeoff_done : public cadmium::out_port<FlightInfo> {};

    // Group input ports and output ports into tuples
    using input_ports = std::tuple<in_takeoff_request>;
    using output_ports = std::tuple<out_takeoff_done>;

    // List submodels (Takeoff_Queue atomic model)
    using submodels = cadmium::modeling::models_tuple<Takeoff_Queue>;

    // External Input Couplings (EIC): Map top-level input to submodel input
    using eics = std::tuple<
        cadmium::modeling::EIC<in_takeoff_request, Takeoff_Queue, Takeoff_Queue_defs::in_new_flight>
    >;


    // External Output Couplings (EOC): Map submodel output to top-level output
    using eocs = std::tuple<
        cadmium::modeling::EOC<Takeoff_Queue, Takeoff_Queue_defs::out_takeoff_done, out_takeoff_done>
    >;

    // Internal Couplings (IC): No internal connections required as we have a single atomic model
    using ics = std::tuple<>;

    // Coupled model type definition
    template<typename TIME>
    using model = cadmium::modeling::coupled_model<TIME, input_ports, output_ports, submodels, eics, eocs, ics>;
};

#endif // TAKEOFF_CONTROL_HPP
